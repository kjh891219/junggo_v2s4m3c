<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- Oracle 기반 -->
<mapper namespace = "member">

  <select id='checkId' resultType='int' parameterType='String'>
    SELECT COUNT(userid) as cnt
    FROM member_test
    WHERE userid=#{userid}
  </select>
  
  <select id='checkNickname' resultType='int' parameterType='String'>
    SELECT COUNT(userid) as cnt
    FROM member_test
    WHERE nickname=#{nickname}
  </select>
  
  <select id='checkEmail' resultType='int' parameterType='String'>
    SELECT COUNT(userid) as cnt
    FROM member_test
    WHERE email=#{email}
  </select>
 
  <insert id="create" parameterType="MemberVO">
    INSERT INTO member_test(userid, mno, pwd, name, nickname, email, tel, zipcode, address1, address2, mdate, 
                          auth, confirm, act, droupout)
    VALUES (#{userid}, (SELECT NVL(MAX(mno), 0)+1 as mno FROM member_test), #{pwd}, #{name}, #{nickname}, #{email}, #{tel}, #{zipcode}, #{address1}, #{address2}, sysdate,
              #{auth}, #{confirm}, #{act}, #{droupout})
  </insert>
  
    <!-- 검색을하지 않는 전체 목록  -->
  <select id="list" resultType="MemberVO">
    SELECT mno, userid, pwd, name, nickname, email, tel, zipcode, address1, address2, mdate
    FROM member_test
    ORDER BY mno ASC
  </select>
 
  <update id="update" parameterType="MemberVO">
    UPDATE member_test 
    SET pwd=#{pwd}, nickname=#{nickname}, email=#{email}, zipcode=#{zipcode},
          address1=#{address1}, address2=#{address2}
    WHERE mno=#{mno}
  </update> 

  <!-- 조회 -->
  <select id="read" resultType="MemberVO" parameterType="int">
    SELECT userid, mno, pwd, name, nickname, email, tel, zipcode, address1, address2, mdate, 
                          auth, confirm, act, droupout
    FROM member_test
    WHERE mno = #{mno}
  </select>
   
  <!-- 아이디로 조회 -->
  <select id="read_userid" resultType="MemberVO" parameterType="String">
    SELECT userid, mno, pwd, name, nickname, email, tel, zipcode, address1, address2, mdate, 
                          auth, confirm, act, droupout
    FROM member_test
    WHERE userid = #{userid}
  </select>
 <!--    
  <select id="passwdCheck" resultType="int" parameterType="Map">
    SELECT COUNT(mno) as cnt
    FROM member
    WHERE mno=#{mno} AND passwd=#{passwd}
  </select>
 
  <update id="update_passwd" parameterType="Map"> Map 안에 mno, passwd가 자동으로 대응된다
    UPDATE member
    SET passwd=#{passwd}
    WHERE mno=#{mno}
  </update>
  
   <delete id="delete" parameterType="int">
    DELETE FROM member
    WHERE mno=#{mno}
  </delete>  
  
  <select id="login" resultType="int" parameterType="MemberVO">
    SELECT COUNT(mno) as cnt
    FROM member
    WHERE id=#{id} AND passwd=#{passwd}
  </select> -->
 
  
  <!-- 관리자 권한 조회 -->
  <select id="admin_search" resultType="int" parameterType="String">
      SELECT COUNT(mno) as cnt
      FROM member_test
      WHERE act=#{act}
  </select>
  
  <!-- 사용자가 회원 가입 이메일 링크를 눌렀을 경우의 처리 -->
  <update id="confirm" parameterType="MemberVO">
      UPDATE member_test
      SET confirm = 'Y', act = 'Y'
      WHERE email=#{email} AND auth=#{auth}
  </update>
  
  <!-- 로그인  -->
  <select id="login" resultType="int" parameterType="MemberVO">
      SELECT COUNT(userid) as cnt 
      FROM member_test 
      WHERE userid=#{userid} AND pwd=#{pwd}
  </select>
  
</mapper>

